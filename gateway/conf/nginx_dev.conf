user root;
worker_processes 6;

#error_log syslog:server=127.0.0.1,facility=local6 warn;
error_log /opt/logs/gateway/error debug;

events {
    worker_connections  1024;
}

http {
    include         mime.types;
    default_type    application/octet-stream;

    sendfile on;

    keepalive_timeout       65;
    client_body_buffer_size 128k;

    log_format main '$http_x_forwarded_for - $remote_addr [$time_local] "$host" "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" $request_time';
    #access_log off;
    access_log /opt/logs/gateway/access main;

    lua_package_path '/opt/gateway/src/?.lua;;/opt/gateway/src/module/?.lua;;';
    lua_package_cpath '/opt/gateway/lib/?.so;;';

    lua_shared_dict healthcheck 5m;
    lua_shared_dict events      5m;
    lua_shared_dict stat_req    5m;

    lua_code_cache on;

    init_by_lua_file        /opt/gateway/src/init.lua;
    init_worker_by_lua_file /opt/gateway/src/init_worker.lua;

    # admin API
    server {
        listen 127.0.0.1:8082;

        location / {
            root   /opt/gateway/html;
            index  index.html index.htm;
        }

        location /config {
            content_by_lua_file /opt/gateway/src/admin_config_access.lua;
        }

        location /cluster {
            content_by_lua_file /opt/gateway/src/admin_cluster_access.lua;
        }

        location /status {
            return 200;
        }
    }

    server {
        listen 127.0.0.1:8080;

        location / {
            access_by_lua_file /opt/gateway/src/access.lua;
            content_by_lua_file /opt/gateway/src/content.lua;
            log_by_lua_file /opt/gateway/src/log.lua;
        }
    }

	#test mock
	server {
		listen 127.0.0.1:9001;
		location / {
			default_type text/plain;
			return 200 "pass";
		}

		location /403 {
			default_type text/plain;
			return 403 "block";
		}
	}

	server {
		listen 127.0.0.1:9002;
		location / {
			default_type text/plain;
			return 200 "pass";
		}

		location /403 {
			default_type text/plain;
			return 403 "block";
		}
	}

	server {
		listen 127.0.0.1:9003;
		location / {
			default_type text/plain;
			return 200 "pass";
		}

		location /403 {
			default_type text/plain;
			return 403 "block";
		}
	}
}


